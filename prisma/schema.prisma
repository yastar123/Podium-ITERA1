// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  STUDENT
  ADMIN
}

enum TicketStatus {
  ACTIVE
  USED
  EXPIRED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  nim       String?  // Student ID Number (optional for admins)
  password  String
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tickets Ticket[]

  @@map("users")
}

model Event {
  id          String   @id @default(cuid())
  name        String
  description String?
  location    String?
  eventDate   DateTime
  quota       Int      @default(200)
  batchSize   Int      @default(200) // Tickets per batch
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  tickets Ticket[]

  @@map("events")
}

model Ticket {
  id           String       @id @default(cuid())
  ticketCode   String       @unique // Generated with nanoid
  status       TicketStatus @default(ACTIVE)
  issuedAt     DateTime     @default(now())
  usedAt       DateTime?    // When ticket was validated/used
  validatedBy  String?      // Admin ID who validated the ticket
  
  // Relations
  userId       String
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  eventId      String
  event        Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@map("tickets")
}